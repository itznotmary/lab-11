class Employee:
    def __init__(self, name, employee_number):
        self.__name = name
        self.__employee_number = employee_number
    def set_name(self, name):
        self.__name = name
    def set_employee_number(self, employee_number):
        self.__employee_number = employee_number
    def get_name(self):
        return self.__name
    def get_employee_number(self):
        return self.__employee_number
class ProductionWorker(Employee):
    def __init__(self, name, employee_number, shift_number, hourly_pay_rate):
        super().__init__(name, employee_number)
        self.__shift_number = shift_number
        self.__hourly_pay_rate = hourly_pay_rate
    def set_shift_number(self, shift_number):
        self.__shift_number = shift_number
    def set_hourly_pay_rate(self, hourly_pay_rate):
        self.__hourly_pay_rate = hourly_pay_rate
    def get_shift_number(self):
        return self.__shift_number
    def get_hourly_pay_rate(self):
        return self.__hourly_pay_rate
def main():
    name = input("Enter the employee's name: ")
    employee_number = input("Enter the employee's number: ")
    shift_number = int(input("Enter the shift number (1 for day, 2 for night): "))
    hourly_pay_rate = float(input("Enter the hourly pay rate: "))
    worker = ProductionWorker(name, employee_number, shift_number, hourly_pay_rate)
    print("\nEmployee Information:")
    print(f"Name: {worker.get_name()}")
    print(f"Employee Number: {worker.get_employee_number()}")
    print(f"Shift Number: {worker.get_shift_number()}")
    print(f"Hourly Pay Rate: ${worker.get_hourly_pay_rate():.2f}")
if __name__ == "__main__":
    main()



class Employee:
    def __init__(self, name, employee_number):
        self.__name = name
        self.__employee_number = employee_number
    def set_name(self, name):
        self.__name = name
    def set_employee_number(self, employee_number):
        self.__employee_number = employee_number
    def get_name(self):
        return self.__name
    def get_employee_number(self):
        return self.__employee_number
class ShiftSupervisor(Employee):
    def __init__(self, name, employee_number, annual_salary, annual_bonus):
        super().__init__(name, employee_number)
        self.__annual_salary = annual_salary
        self.__annual_bonus = annual_bonus
    def set_annual_salary(self, annual_salary):
        self.__annual_salary = annual_salary
    def set_annual_bonus(self, annual_bonus):
        self.__annual_bonus = annual_bonus
    def get_annual_salary(self):
        return self.__annual_salary
    def get_annual_bonus(self):
        return self.__annual_bonus
def main():
    name = input("Enter the shift supervisor's name: ")
    employee_number = input("Enter the shift supervisor's employee number: ")
    annual_salary = float(input("Enter the annual salary: "))
    annual_bonus = float(input("Enter the annual production bonus: "))
    supervisor = ShiftSupervisor(name, employee_number, annual_salary, annual_bonus)
    print("\nShift Supervisor Information:")
    print(f"Name: {supervisor.get_name()}")
    print(f"Employee Number: {supervisor.get_employee_number()}")
    print(f"Annual Salary: ${supervisor.get_annual_salary():.2f}")
    print(f"Annual Bonus: ${supervisor.get_annual_bonus():.2f}")
if __name__ == "__main__":
    main()




class Person:
    def __init__(self, name, address, telephone):
        self.__name = name
        self.__address = address
        self.__telephone = telephone
    def set_name(self, name):
        self.__name = name
    def set_address(self, address):
        self.__address = address
    def set_telephone(self, telephone):
        self.__telephone = telephone
    def get_name(self):
        return self.__name
    def get_address(self):
        return self.__address
    def get_telephone(self):
        return self.__telephone
class Customer(Person):
    def __init__(self, name, address, telephone, customer_number, on_mailing_list):
        super().__init__(name, address, telephone)
        self.__customer_number = customer_number
        self.__on_mailing_list = on_mailing_list
    def set_customer_number(self, customer_number):
        self.__customer_number = customer_number
    def set_on_mailing_list(self, on_mailing_list):
        self.__on_mailing_list = on_mailing_list
    def get_customer_number(self):
        return self.__customer_number
    def get_on_mailing_list(self):
        return self.__on_mailing_list
def main():
    name = input("Enter the customer's name: ")
    address = input("Enter the customer's address: ")
    telephone = input("Enter the customer's telephone number: ")
    customer_number = input("Enter the customer number: ")
    on_mailing_list = input("Is the customer on the mailing list? (yes/no): ").lower() == 'yes'
    customer = Customer(name, address, telephone, customer_number, on_mailing_list)
    print("\nCustomer Information:")
    print(f"Name: {customer.get_name()}")
    print(f"Address: {customer.get_address()}")
    print(f"Telephone: {customer.get_telephone()}")
    print(f"Customer Number: {customer.get_customer_number()}")
    print(f"On Mailing List: {'Yes' if customer.get_on_mailing_list() else 'No'}")
if __name__ == "__main__":
    main()



